@use 'sass:map';
@use '@angular/material' as mat;


@include mat.core();

:host {
  h2 {
    margin: 8px 0;
    text-align: center;
  }

  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  height: calc(100% - 64px - 48px);

  .wrapper {
    flex: 1;
    height: calc(100% - 64px);
  }



  .textbook__nav {
    margin: 0;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    column-gap: 24px;

    .nav__container {
      display: flex;
      column-gap: 8px;
    }
  }

  .textbook__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    margin: 0 16px;
  }
}

::ng-deep {
  .mat-form-field {
    &.selector {
      display: block;
    }

  }

  .mat-raised-button {
    &.textbook__list-button {
      position: fixed;
      width: 100%;
      bottom: 0;
      left: 0;
      right: 0;

      z-index: 1;
    }
  }

  .mat-drawer-container {
    height: 100%;

    .mat-drawer {
      min-width: 250px;
      padding: 8px;

      width: 20%;

      .mat-button-toggle-group {
        width: calc(100% - 6px);

      }
    }

    .mat-drawer-content {
      padding: 12px;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-wrap: wrap;
      gap: 16px 36px;
    }
  }

  @mixin set-textbook-color($theme) {
    $color-config: mat.get-color-config($theme);
    $primary-palette: map.get($color-config, primary);
    $accent-palette: map.get($color-config, accent);
    $warn-palette: map.get($color-config, warn);

    .mat-drawer-container {
      background: mat.get-color-from-palette($accent-palette, 100, 0.5);

      &.learned-page {
        background: mat.get-color-from-palette($primary-palette, 100, 0.5);
      }

      &.difficult-page {
        background: mat.get-color-from-palette($warn-palette, 100, 0.5);
      }

      mat-select-trigger {

        &.primary {
          color: mat.get-color-from-palette($primary-palette, 600);
        }

        &.warn {
          color: mat.get-color-from-palette($warn-palette, 600);
        }
      }

      .mat-drawer {
        background: mat.get-color-from-palette($primary-palette, 100, 0.5);
      }

      .mat-button-toggle-button {
        background: mat.get-color-from-palette($primary-palette, 100, 0.5);
      }

      .mat-button-toggle-checked {
        background: mat.get-color-from-palette($primary-palette, 200);
      }

      .mwl-gauge {

        .gauge-styles {

          .dial-styles {
            stroke: mat.get-color-from-palette($accent-palette, 100);
            stroke-width: 5;
            stroke-linecap: round;
          }

          .value {
            stroke-width: 5;
            stroke: mat.get-color-from-palette($accent-palette, 600);
            stroke-linecap: round;
          }

          .text-container {
            font-size: 40px;
          }

          .value-styles {
            fill: mat.get-color-from-palette($accent-palette, 600);
          }
        }

        &.gauge-learned {
          .dial-styles {
            stroke: mat.get-color-from-palette($primary-palette, 100);
          }

          .value {
            stroke: mat.get-color-from-palette($primary-palette, 600);
          }

          .value-styles {
            fill: mat.get-color-from-palette($primary-palette, 600);
          }
        }

        &.gauge-difficult {
          .dial-styles {
            stroke: mat.get-color-from-palette($warn-palette, 100);
          }

          .value {
            stroke: mat.get-color-from-palette($warn-palette, 600);
          }

          .value-styles {
            fill: mat.get-color-from-palette($warn-palette, 600);
          }
        }
      }
    }

    .mat-card-title {
      color: mat.get-color-from-palette($primary-palette, 800);
    }

    .mat-card {
      background: mat.get-color-from-palette($primary-palette, 100);
    }

    .playedPhrase {
      color: mat.get-color-from-palette($accent-palette, 600);
    }


  }

  .a1-difficulty {
    $a1-primary: mat.define-palette(mat.$light-blue-palette);
    $a1-accent: mat.define-palette(mat.$light-green-palette);
    $a1-warn: mat.define-palette(mat.$red-palette);
    $a1-theme: mat.define-light-theme((color: (primary: $a1-primary, accent: $a1-accent, warn: $a1-warn),
      ));

    @include mat.all-component-colors($a1-theme);
    @include set-textbook-color($a1-theme);
  }

  .a2-difficulty {
    $a2-primary: mat.define-palette(mat.$blue-palette);
    $a2-accent: mat.define-palette(mat.$lime-palette);
    $a2-warn: mat.define-palette(mat.$red-palette);
    $a2-theme: mat.define-light-theme((color: (primary: $a2-primary, accent: $a2-accent, warn: $a2-warn),
      ));

    @include mat.all-component-colors($a2-theme);
    @include set-textbook-color($a2-theme);
  }

  .b1-difficulty {
    $b1-primary: mat.define-palette(mat.$indigo-palette);
    $b1-accent: mat.define-palette(mat.$yellow-palette);
    $b1-warn: mat.define-palette(mat.$red-palette);
    $b1-theme: mat.define-light-theme((color: (primary: $b1-primary, accent: $b1-accent, warn: $b1-warn),
      ));

    @include mat.all-component-themes($b1-theme);
    @include set-textbook-color($b1-theme);
  }

  .b2-difficulty {
    $b2-primary: mat.define-palette(mat.$deep-purple-palette);
    $b2-accent: mat.define-palette(mat.$amber-palette);
    $b2-warn: mat.define-palette(mat.$red-palette);
    $b2-theme: mat.define-light-theme((color: (primary: $b2-primary, accent: $b2-accent, warn: $b2-warn),
      ));

    @include mat.all-component-colors($b2-theme);
    @include set-textbook-color($b2-theme);
  }

  .c1-difficulty {
    $c1-primary: mat.define-palette(mat.$purple-palette);
    $c1-accent: mat.define-palette(mat.$orange-palette);
    $c1-warn: mat.define-palette(mat.$red-palette);
    $c1-theme: mat.define-light-theme((color: (primary: $c1-primary, accent: $c1-accent, warn: $c1-warn),
      ));

    @include mat.all-component-colors($c1-theme);
    @include set-textbook-color($c1-theme);
  }

  .c2-difficulty {
    $c2-primary: mat.define-palette(mat.$pink-palette);
    $c2-accent: mat.define-palette(mat.$deep-orange-palette);
    $c2-warn: mat.define-palette(mat.$red-palette);
    $c2-theme: mat.define-light-theme((color: (primary: $c2-primary, accent: $c2-accent, warn: $c2-warn),
      ));

    @include mat.all-component-colors($c2-theme);
    @include set-textbook-color($c2-theme);
  }

  .difficult-page {
    $difficult-page-primary: mat.define-palette(mat.$deep-orange-palette);
    $difficult-page-accent: mat.define-palette(mat.$light-green-palette);
    $difficult-page-warn: mat.define-palette(mat.$red-palette);
    $difficult-page-theme: mat.define-light-theme((color: (primary: $difficult-page-primary, accent: $difficult-page-accent, warn: $difficult-page-warn),
      ));

    @include mat.all-component-colors($difficult-page-theme);
    @include set-textbook-color($difficult-page-theme);
  }

  .search-mode {
    $search-mode-page-primary: mat.define-palette(mat.$light-green-palette);
    $search-mode-page-accent: mat.define-palette(mat.$deep-orange-palette);
    $search-mode-page-warn: mat.define-palette(mat.$red-palette);
    $search-mode-page-theme: mat.define-light-theme((color: (primary: $search-mode-page-primary, accent: $search-mode-page-accent, warn: $search-mode-page-warn),
      ));

    @include mat.all-component-colors($search-mode-page-theme);
    @include set-textbook-color($search-mode-page-theme);
  }
}
